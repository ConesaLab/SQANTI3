#!/bin/bash

sqanti3_qc="python3 sqanti3_qc.py"
sqanti3_filter="python3 sqanti3_filter.py"
sqanti3_rescue="python3 sqanti3_rescue.py"

# Sqanti3.qc

skip_qc="false"
input_gtf="example/UHR_chr22.gtf"
chunks=1
reference_gtf="example/gencode.v38.basic_chr22.gtf"
reference_fasta="example/GRCh38.p13_chr22.fasta"
cage_peak_bed_file="data/ref_TSS_annotation/human.refTSS_v3.1.hg38.bed"
polyA_motif_list="data/polyA_motifs/mouse_and_human.polyA_motif.txt"
output_prefix="UHR_chr22"
destination_folder_QC="/tmp/sqanti3_wrapper/QC/"
full_length_pacbio_abundance_tsv="example/UHR_abundance.tsv"
short_reads_fofn="example/UHR_chr22_short_reads.fofn"
cpus="4"
report_file="both" # pdf, html or both




# Sqanti3.filter
skip_filter="false"
filter_mode="both"
skip_report="false"
classification_file_to_filter="${destination_folder_QC}/${output_prefix}_classification.txt" 
gtf_to_filter="${destination_folder_QC}/${output_prefix}_corrected.gtf"
cpus_filter=${cpus}
isoforms="GMST/GMST_tmp.faa"
isoannotgff3="example/SQANTI3_QC_output/UHR_chr22.gff3"
sam=""
faa="${destination_folder_QC}/${output_prefix}_corrected.faa"
monoexonic="true"
skip_report=""


ouput_folder_filter_rules="/tmp/sqanti3_wrapper/sqanti3_filter_rules"
prefix_filter_rules="${output_prefix}"
json_file="/home/frobledo/Software/SQANTI3/SQANTI3/utilities/filter/filter_default.json"

ouput_folder_filter_ml="/tmp/sqanti3_wrapper/sqanti3_filter_ml"
prefix_filter_ml="${output_prefix}"
percent_training="0.8"
TP=""
TN=""
threshold="0.7"

# Sqanti3.rescue
skip_rescue="false"
rescue_mode="both"

rescue_rules_filtered_classification="${ouput_folder_filter_rules}/${prefix_filter_rules}_RulesFilter_result_classification.txt"
rescue_rules_reference_classification="${destination_folder_QC}/${output_prefix}_classification.txt"
rescue_rules_isoforms="${destination_folder_QC}/${output_prefix}_corrected.fasta"
rescue_rules_reference_genome=${reference_fasta}
rescue_rules_gtf="${ouput_folder_filter_rules}/${prefix_filter_rules}.filtered.gtf"
rescue_rules_reference_gtf=${reference_gtf}
rescue_rules_monoexons="all"
rescue_rules_mode="full"
rescue_rules_output_prefix="rescued_by_rules"
rescue_rules_output_folder="/tmp/sqanti3_wrapper/sqanti3_rescue_rules"
rescue_rules_json_file="${json_file}"

rescue_ml_filtered_classification="${ouput_folder_filter_ml}/${prefix_filter_ml}_MLresult_classification.txt"
rescue_ml_reference_classification="${destination_folder_QC}/${output_prefix}_classification.txt"
rescue_ml_isoforms=${rescue_rules_isoforms}
rescue_ml_reference_genome=${reference_fasta}
rescue_ml_gtf="${ouput_folder_filter_ml}/${prefix_filter_ml}.filtered.gtf"
rescue_ml_reference_gtf="${reference_gtf}"
rescue_ml_monoexons="all"
rescue_ml_mode="full"
rescue_ml_output_prefix="rescued_by_ml"
rescue_ml_output_folder="/tmp/sqanti3_wrapper/sqanti3_rescue_ml"
rescue_ml_monoexons="all"
rescue_ml_mode="full"
rescue_ml_threshold=${threshold}
rescue_ml_randomforest_rdata="${ouput_folder_filter_ml}/randomforest.RData"

