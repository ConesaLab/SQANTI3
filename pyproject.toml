[build-system]
requires = ["setuptools>=42", "wheel", "setuptools_scm[toml]>=3.4", "cython>=0.29", "numpy>=1.18"]
build-backend = 'setuptools.build_meta'

[tool.black]
line-length = 88
target-version = ['py37', 'py38']
skip-string-normalization = true


[tool.poetry]
name = "SQANTI3"
version = "1.2.0"
description = "Quality Control of Long-Read Defined Transcriptomes"
authors = ["fraparp1@upv.edu.es", "pedsalga@upv.edu.es"]
license = "GPL3"
repository = "https://github.com/ConesaLab/SQANTI3"
classifiers = [
        "Development Status :: 5 - Production/Stable",
        "Environment :: Console",
        "Intended Audience :: Science/Research",
        "License :: OSI Approved :: BSD License",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.7",
        "Programming Language :: Python :: 3.8",
        "Operating System :: MacOS :: MacOS X",
        "Operating System :: POSIX :: Linux",
        "Topic :: Scientific/Engineering :: Bio-Informatics",
    ]

[tool.poetry.scripts]
sqanti3_qc = "sqanti3.sqanti3_qc:main"
sqanti3_RulesFilter = "sqanti3.sqanti3_RulesFilter.py:main"

[tool.poetry.dependencies]
python = "^3.7"
appdirs = "1.4.3"
cfgv = "3.1.0"
decorator = "4.4.2"
distlib = "0.3.0"
filelock = "3.0.12"
identify = "1.4.19"
importlib-metadata = "1.6.1"
joblib = "0.15.1"
networkx = "2.4"
nodeenv = "1.4.0"
pyyaml = "5.3.1"
threadpoolctl = "2.1.0"
toml = "0.10.1"
virtualenv = "20.0.20"
zipp = "3.1.0"
scikit-learn = "0.23.1"
scipy = "1.4.1"
pandas = "1.0.4"
pyvcf = "0.6.8"
cython = "0.29.20"
pysam = "0.16.0"
psutil = "5.7.0"
bx-python = "0.8.8"
biopython ="1.76"
bcbio-gff = "0.6.6"
numpy = "1.18.1"
cupcake = { git = "https://github.com/milescsmith/cDNA_Cupcake.git", branch = "prune" }
pygmst = { git = "https://github.com/milescsmith/pygmst.git" }

[tool.poetry.dev-dependencies]
pytest = "^5.2"

# [build-system]
# requires = ["poetry>=0.12"]
# build-backend = "poetry.masonry.api"

[tool.flakehell.plugins]
pycodestyle = ["+*", "-F401", "-E501", "-C901", "-E401", "-E203", "-W503"]
pyflakes = ["+*"]

# match by prefix
[tool.flakehell.exceptions."tests/"]
pycodestyle = ["-*"]     # disable a check
pyflakes = ["-*"]           # disable a plugin

[tool.flakehell.exceptions."tests/test_example.py"]
pyflakes = ["+*"]           # enable a plugin

# match by glob
[tool.flakehell.exceptions."**/test_*.py"]
pyflakes = ["-*"]