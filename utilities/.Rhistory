rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
filter_type <- "Interval"
filter_rule <- c(lower_limit, upper_limit)
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Threshold"
filter_rule <- r
}
rules_table <- add_row(rules_table,c("structural_category"=sc, "column"=col_name, "type"=filter_type, "rule"=filter_rule))
}
}
rules_table <- data.frame()
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
filter_type <- "Interval"
filter_rule <- c(lower_limit, upper_limit)
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Threshold"
filter_rule <- r
}
rules_table <- add_row(rules_table,c("structural_category"=sc, "column"=col_name, "type"=filter_type, "rule"=filter_rule))
}
}
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
filter_type <- "Interval"
filter_rule <- c(lower_limit, upper_limit)
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Threshold"
filter_rule <- r
}
rules_table <- rbind(rules_table,c("structural_category"=sc, "column"=col_name, "type"=filter_type, "rule"=filter_rule))
}
}
warnings()
rules_table
sc
rules_table <- data.frame()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
filter_type <- "Interval"
filter_rule <- c(lower_limit, upper_limit)
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Threshold"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
filter_rule
class(filter_rule)
as.vector(filter_rule)
as.vector(filter_rule) %>% class()
c(lower_limit, upper_limit)
c(lower_limit, upper_limit) %>% class()
rules_table <- data.frame()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
filter_type <- "Interval"
filter_rule <- as.vector(c(lower_limit, upper_limit))
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Threshold"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
rules_table <- data.frame()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
filter_type <- "Interval"
filter_rule <- list(c(lower_limit, upper_limit))
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Threshold"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
list(c(lower_limit, upper_limit))
rules_table
rules_table[1,"rule"]
rules_table[2,"rule"]
rules_table <- tibble()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
filter_type <- "Interval"
filter_rule <- list(c(lower_limit, upper_limit))
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Threshold"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
rules_table <- tibble()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
filter_type <- "Interval"
filter_rule <- c(lower_limit, upper_limit)
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Threshold"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
rules_table <- data.frame()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
filter_type <- "Interval"
filter_rule <- I(list(c(lower_limit, upper_limit)))
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Threshold"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
rules_table
rules_table[1,"rule"]
I(list(c(lower_limit, upper_limit)))
list(c(lower_limit, upper_limit))
rules_table <- data.frame()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]="Min_Threshold"
rules_table[count,"rule"]=lower_limit
count=count+1
filter_type <- "Max_Threshold"
filter_rule <- upper_limit
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Min_Threshold"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
rules_table
json_df <- jsonlite::fromJSON(txt = "test.json" ,simplifyDataFrame = T)
rules_table <- data.frame()
count=0
json_df <- jsonlite::fromJSON(txt = "test.json" ,simplifyDataFrame = T)
json_df <- jsonlite::fromJSON(txt = "test.json" ,simplifyDataFrame = T)
FALSE
json_df <- jsonlite::fromJSON(txt = "test.json" ,simplifyDataFrame = T)
rules_table <- data.frame()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]="Min_Threshold"
rules_table[count,"rule"]=lower_limit
count=count+1
filter_type <- "Max_Threshold"
filter_rule <- upper_limit
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Min_Threshold"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
rules_table
json_df <- jsonlite::fromJSON(txt = "test.json" ,simplifyDataFrame = T)
rules_table <- data.frame()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]="Min_Threshold"
rules_table[count,"rule"]=lower_limit
count=count+1
filter_type <- "Max_Threshold"
filter_rule <- upper_limit
}else{
filter_type <- "Category"
filter_rule <- r
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Min_Threshold"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
rules_table
r
length(r)
rules_table <- data.frame()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]="Min_Threshold"
rules_table[count,"rule"]=lower_limit
count=count+1
filter_type <- "Max_Threshold"
filter_rule <- upper_limit
}else{
filter_type <- "Category"
for (c in length(r)-1){
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=r[c]
rules_table[count,"rule"]=r[c]
count=count+1
}
filter_rule <- r[c+1]
}
}else if(is.logical(r)){
filter_type <- "Logical"
filter_rule <- r
}else if(is.numeric(r)){
filter_type <- "Min_Threshold"
filter_rule <- r
}else if(is.character(r)){
filter_type <- "Category"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
rules_table
rules_table[9,"rule"]
rules_table[9,"rule"]%>%isFALSE()
rules_table[9,"rule"]%>% as.logical()
rules_table[9,"rule"]%>% as.logical() %>% is.logical()
rules_table[6,"rule"]%>% as.logical() %>% is.logical()
rules_table[6,"rule"]%>% as.logical()
rules_table[6,"rule"]%>% as.logical() %>% is.logical()
rules_table[9,"rule"]=="FALSE"
rules_table[9,"rule"]=="FALSE"|"TRUE"
rules_table[9,"rule"]%>% as.logical() %>% isFALSE()
rules_table[9,"rule"]%>% as.logical() %>% isTRUE()
rules_table[9,"rule"]%>% isTRUE()
rules_table[9,"rule"]%>% isFALSE()
rules_table <- data.frame()
count=0
for (sc in names(json_df)){
rules <- json_df[[as.character(sc)]]
for (r in names(rules)){
count=count+1
col_name <- r
r <- unlist(rules[[r]])
if (length(r)>1){
if (is.numeric(r)){
lower_limit <- min(r)
upper_limit <- max(r)
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]="Min_Threshold"
rules_table[count,"rule"]=lower_limit
count=count+1
filter_type <- "Max_Threshold"
filter_rule <- upper_limit
}else{
filter_type <- "Category"
for (c in length(r)-1){
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=r[c]
rules_table[count,"rule"]=r[c]
count=count+1
}
filter_rule <- r[c+1]
}
}else if(r=="TRUE"|r=="FALSE"|r=="True"|r=="False"){
filter_type <- "Logical"
filter_rule <- as.logical(r)
}else if(is.numeric(r)){
filter_type <- "Min_Threshold"
filter_rule <- r
}else if(is.character(r)){
filter_type <- "Category"
filter_rule <- r
}
rules_table[count,"structural_category"]=sc
rules_table[count,"column"]=col_name
rules_table[count,"type"]=filter_type
rules_table[count,"rule"]=filter_rule
}
}
rules_table
c
y
w
w="all_canonical"
y[w]
rules_table
